// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package foobar represents the imported interface "hayride:wit-examples/foobar@0.0.1".
package foobar

import (
	"github.com/hayride-dev/wit-examples/internal/imports/hayride/wit-examples/bar"
	"github.com/hayride-dev/wit-examples/internal/imports/hayride/wit-examples/foo"
	"go.bytecodealliance.org/cm"
)

// Foo represents the imported type alias "hayride:wit-examples/foobar@0.0.1#foo".
//
// See [foo.Foo] for more information.
type Foo = foo.Foo

// Bar represents the imported type alias "hayride:wit-examples/foobar@0.0.1#bar".
//
// See [bar.Bar] for more information.
type Bar = bar.Bar

// Foobar represents the imported function "foobar".
//
//	foobar: func(b: bar, f: foo) -> string
//
//go:nosplit
func Foobar(b Bar, f Foo) (result string) {
	b0 := cm.Reinterpret[uint32](b)
	f0 := cm.Reinterpret[uint32](f)
	wasmimport_Foobar((uint32)(b0), (uint32)(f0), &result)
	return
}
